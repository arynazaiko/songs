{"version":3,"sources":["redux/actions/index.js","screens/HomePage.js","App.js","redux/reducers/index.js","serviceWorker.js","index.js"],"names":["postSongSuccess","song","type","payload","postSongError","error","fetchSongsSuccess","songs","fetchSongsError","deleteSongSuccess","id","deleteSongError","HomePage","state","formRef","React","createRef","fileRef","handleChange","e","_e$target","target","name","value","_this","setState","Object","defineProperty","handleSubmit","preventDefault","formIsValid","_this$state","title","author","time","file","current","files","props","postSong","reset","_this$state2","handleClick","fetchSongs","handleDelete","deleteSong","_this2","this","react_default","a","createElement","Fragment","className","onSubmit","ref","placeholder","onChange","onClick","map","key","controls","src","concat","path","Component","connect","dispatch","axios","get","then","_ref2","data","catch","currentSong","FormData","append","post","_ref","delete","App","Route","exact","component","initialState","users","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","arguments","length","undefined","action","objectSpread","toConsumableArray","songIndex","findIndex","splice","applyMiddleware","thunk","logger","ReactDOM","render","es","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c86e4769.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// action creator\r\nexport const actionCreator = data => ({ type: \"TEST_ACTION\", payload: data })\r\n\r\n// async action\r\nexport const postSong = (song, file) => dispatch => {\r\n  const currentSong = new FormData();\r\n  currentSong.append('title', song.title);\r\n  currentSong.append('author', song.author);\r\n  currentSong.append('time', song.time);\r\n  currentSong.append('file', file, file.name);\r\n\r\n  axios.post('https://infinite-brook-78423.herokuapp.com/api/songs', currentSong)\r\n    .then(({ data }) => dispatch(postSongSuccess(data)))\r\n    .catch(error => dispatch(postSongError(error)));\r\n}\r\n\r\nexport const fetchSongs = () => dispatch => {\r\n  axios.get('https://infinite-brook-78423.herokuapp.com/api/songs')\r\n    .then(({ data }) => dispatch(fetchSongsSuccess(data)))\r\n    .catch(error => dispatch(fetchSongsError(error)));\r\n}\r\n\r\nexport const deleteSong = (id) => dispatch => {\r\n  axios.delete(`https://infinite-brook-78423.herokuapp.com/api/songs/${id}`)\r\n    .then(() => dispatch(deleteSongSuccess(id)))\r\n    .catch((error) => dispatch(deleteSongError(error)))\r\n}\r\n\r\nconst postSongSuccess = song => ({ type: \"POST_SONG_SUCCESS\", payload: song });\r\nconst postSongError = error => ({ type: \"POST_SONG_ERROR\", payload: error });\r\nconst fetchSongsSuccess = songs => ({ type: \"FETCH_SONGS_SUCCESS\", payload: songs });\r\nconst fetchSongsError = error => ({ type: \"FETCH_SONGS_ERROR\", payload: error });\r\nconst deleteSongSuccess = id => ({ type: \"DELETE_SONG_SUCCESS\", payload: id });\r\nconst deleteSongError = error => ({ type: \"DELETE_SONG_ERROR\", payload: error });\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchSongs, postSong, deleteSong } from '../redux/actions'\n\nclass HomePage extends Component {\n  state = {}\n  formRef = React.createRef();\n  fileRef = React.createRef();\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.formIsValid()) {\n      const { title, author, time } = this.state;\n      const file = this.fileRef.current.files[0];\n      const song = { title, author, time };\n\n      this.props.postSong(song, file);\n      this.formRef.current.reset();\n    }\n  }\n\n  formIsValid = () => {\n    const { title, author, time } = this.state;\n    const file = this.fileRef.current.files[0];\n\n    return author && title && time && file\n  }\n\n  handleClick = (e) => {\n    this.props.fetchSongs();\n  }\n\n  handleDelete = (id) => {\n    this.props.deleteSong(id);\n  }\n\n  render() {\n    const { songs } = this.props;\n\n    return (\n      <>\n        <form className=\"form-inline mb-3\" onSubmit={this.handleSubmit} ref={this.formRef}>\n          <input placeholder=\"Название\" name=\"title\" className=\"form-control mr-2\" onChange={this.handleChange} />\n          <input placeholder=\"Автор\" name=\"author\" className=\"form-control mr-2\" onChange={this.handleChange} />\n          <input placeholder=\"Длительность\" name=\"time\" className=\"form-control mr-2\" onChange={this.handleChange} />\n          <input type=\"file\" ref={this.fileRef} />\n          <button className=\"btn btn-success\">Отправить</button>\n        </form>\n        <button onClick={this.handleClick} className=\"btn btn-primary mb-3\">Получить песни</button>\n        <ul className=\"list-group\">\n          {songs.map(song => {\n            return (\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={song.id}>\n                {song.title} {song.author}\n                <audio controls>\n                  <source src={`https://infinite-brook-78423.herokuapp.com/${song.path}`} type=\"audio/mpeg\"></source>\n                </audio>\n                <span className=\"badge badge-primary badge-pill\">{song.time}</span>\n                <button onClick={(e) => this.handleDelete(song.id)} className=\"btn btn-danger mb-3\">Удалить песню</button>\n              </li>\n            )\n          })}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    songs: state.songs\n  }\n}\nexport default connect(mapStateToProps, { fetchSongs, postSong, deleteSong })(HomePage);\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport HomePage from './screens/HomePage';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container py-5\">\n        <Route exact path=\"/\" component={HomePage} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n  songs: [],\n  users: [],\n}\n\nexport default function reducer(state = initialState, action) {\n\n  let songs;\n\n  switch (action.type) {\n    case \"FETCH_SONGS_SUCCESS\":\n      return {\n        ...state,\n        songs: action.payload,\n      }\n\n    case \"POST_SONG_SUCCESS\":\n      songs = [...state.songs, action.payload];\n\n      return {\n        ...state,\n        songs: songs,\n      }\n\n    case \"DELETE_SONG_SUCCESS\":\n      songs = [...state.songs];\n\n      const songIndex = songs.findIndex((song) => {\n        return action.payload.id === song.id;\n      });\n      songs.splice(songIndex, 1);\n\n      return {\n        ...state,\n        songs: songs,\n      }\n\n    default:\n      return state;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport reducers from './redux/reducers';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk, logger)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n\nif (module.hot) {\n  module.hot.accept();\n}"],"sourceRoot":""}